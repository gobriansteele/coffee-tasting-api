"""Create coffee tasting tables

Revision ID: 31d141bf7e1b
Revises: 0ca0ad41b915
Create Date: 2025-06-22 14:54:04.457203

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "31d141bf7e1b"
down_revision = "0ca0ad41b915"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "flavortag",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_flavortag_id"), "flavortag", ["id"], unique=False)
    op.create_table(
        "roaster",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("website", sa.String(length=500), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roaster_id"), "roaster", ["id"], unique=False)
    op.create_index(op.f("ix_roaster_name"), "roaster", ["name"], unique=False)
    op.create_table(
        "coffee",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("roaster_id", sa.UUID(), nullable=False),
        sa.Column("origin_country", sa.String(length=100), nullable=True),
        sa.Column("origin_region", sa.String(length=255), nullable=True),
        sa.Column("farm_name", sa.String(length=255), nullable=True),
        sa.Column("producer", sa.String(length=255), nullable=True),
        sa.Column("altitude", sa.String(length=100), nullable=True),
        sa.Column(
            "processing_method",
            postgresql.ENUM(
                "WASHED",
                "NATURAL",
                "HONEY",
                "SEMI_WASHED",
                "WET_HULLED",
                "CARBONIC_MACERATION",
                "OTHER",
                name="processing_method_enum",
            ),
            nullable=True,
        ),
        sa.Column("variety", sa.String(length=255), nullable=True),
        sa.Column(
            "roast_level",
            postgresql.ENUM(
                "LIGHT", "MEDIUM_LIGHT", "MEDIUM", "MEDIUM_DARK", "DARK", name="roast_level_enum"
            ),
            nullable=True,
        ),
        sa.Column("roast_date", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("bag_size", sa.String(length=50), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["roaster_id"],
            ["roaster.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_coffee_id"), "coffee", ["id"], unique=False)
    op.create_index(op.f("ix_coffee_name"), "coffee", ["name"], unique=False)
    op.create_index(op.f("ix_coffee_roaster_id"), "coffee", ["roaster_id"], unique=False)
    op.create_table(
        "coffee_flavors",
        sa.Column("coffee_id", sa.UUID(), nullable=False),
        sa.Column("flavor_tag_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["coffee_id"],
            ["coffee.id"],
        ),
        sa.ForeignKeyConstraint(
            ["flavor_tag_id"],
            ["flavortag.id"],
        ),
        sa.PrimaryKeyConstraint("coffee_id", "flavor_tag_id"),
    )
    op.create_table(
        "tasting_session",
        sa.Column("coffee_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=False),
        sa.Column(
            "brew_method",
            postgresql.ENUM(
                "POUR_OVER",
                "FRENCH_PRESS",
                "ESPRESSO",
                "AEROPRESS",
                "CHEMEX",
                "V60",
                "KALITA",
                "SIPHON",
                "COLD_BREW",
                "MOKA_POT",
                "DRIP",
                "OTHER",
                name="brew_method_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "grind_size",
            postgresql.ENUM(
                "EXTRA_FINE",
                "FINE",
                "MEDIUM_FINE",
                "MEDIUM",
                "MEDIUM_COARSE",
                "COARSE",
                "EXTRA_COARSE",
                name="grind_size_enum",
            ),
            nullable=True,
        ),
        sa.Column("coffee_dose", sa.Numeric(precision=5, scale=1), nullable=True),
        sa.Column("water_amount", sa.Numeric(precision=6, scale=1), nullable=True),
        sa.Column("water_temperature", sa.Integer(), nullable=True),
        sa.Column("brew_time", sa.String(length=20), nullable=True),
        sa.Column("grinder", sa.String(length=255), nullable=True),
        sa.Column("brewing_device", sa.String(length=255), nullable=True),
        sa.Column("filter_type", sa.String(length=100), nullable=True),
        sa.Column("session_notes", sa.Text(), nullable=True),
        sa.Column("overall_rating", sa.Integer(), nullable=True),
        sa.Column("would_buy_again", sa.Boolean(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["coffee_id"],
            ["coffee.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasting_session_coffee_id"), "tasting_session", ["coffee_id"], unique=False)
    op.create_index(op.f("ix_tasting_session_id"), "tasting_session", ["id"], unique=False)
    op.create_index(op.f("ix_tasting_session_user_id"), "tasting_session", ["user_id"], unique=False)
    op.create_table(
        "tasting_note",
        sa.Column("tasting_session_id", sa.UUID(), nullable=False),
        sa.Column("flavor_tag_id", sa.UUID(), nullable=False),
        sa.Column("intensity", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("aroma", sa.Boolean(), nullable=False),
        sa.Column("flavor", sa.Boolean(), nullable=False),
        sa.Column("aftertaste", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["flavor_tag_id"],
            ["flavortag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tasting_session_id"],
            ["tasting_session.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasting_note_flavor_tag_id"), "tasting_note", ["flavor_tag_id"], unique=False)
    op.create_index(op.f("ix_tasting_note_id"), "tasting_note", ["id"], unique=False)
    op.create_index(
        op.f("ix_tasting_note_tasting_session_id"), "tasting_note", ["tasting_session_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tasting_note_tasting_session_id"), table_name="tasting_note")
    op.drop_index(op.f("ix_tasting_note_id"), table_name="tasting_note")
    op.drop_index(op.f("ix_tasting_note_flavor_tag_id"), table_name="tasting_note")
    op.drop_table("tasting_note")
    op.drop_index(op.f("ix_tasting_session_user_id"), table_name="tasting_session")
    op.drop_index(op.f("ix_tasting_session_id"), table_name="tasting_session")
    op.drop_index(op.f("ix_tasting_session_coffee_id"), table_name="tasting_session")
    op.drop_table("tasting_session")
    op.drop_table("coffee_flavors")
    op.drop_index(op.f("ix_coffee_roaster_id"), table_name="coffee")
    op.drop_index(op.f("ix_coffee_name"), table_name="coffee")
    op.drop_index(op.f("ix_coffee_id"), table_name="coffee")
    op.drop_table("coffee")
    op.drop_index(op.f("ix_roaster_name"), table_name="roaster")
    op.drop_index(op.f("ix_roaster_id"), table_name="roaster")
    op.drop_table("roaster")
    op.drop_index(op.f("ix_flavortag_id"), table_name="flavortag")
    op.drop_table("flavortag")
    # ### end Alembic commands ###
